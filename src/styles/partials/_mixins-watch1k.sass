// px to em
$browser-context: 16
@function em($pixels, $context: $browser-context)
	@return #{$pixels/$context}em

=cover-img
	img
		width: 100%
		height: 100%
		object-fit: cover
		font-family: 'object-fit: cover;'
	

// gpu
=gpu
	transform: translate3d(0, 0, 0)
	
=f($font-family, $font-size: null, $line-height: null, $letter-spacing: null)
	@if $font-family == 'f700'
		+f700
	@else
		font-family: $font-family, Helvetica Neue, Helvetica, Arial, sans-serif
	@if $font-family != null
		font-weight: normal
	@if $font-size != null
		font-size: $font-size * 1px
	@if $line-height != null
		line-height: $line-height * 1px
	@if $letter-spacing != null
		letter-spacing: ($letter-spacing / 1000) * 1em

// clearfix
=clr
	&:after
		content: ""
		display: table
		clear: both
		
=no-clr
	&:after
		content: none
		display: none

// maxWidth
=r($width)
	@media only screen and (max-width: $width+ "px")
		@content
		
// minWidth
=rmin($width)
	@media only screen and (min-width: $width+ "px")
		@content

// font-face
=font($alias, $name)
	@font-face
		font-family: $alias
		src: url("../fonts/" + $name + ".eot")
		src: url("../fonts/" + $name + ".eot?#iefix") format("embedded-opentype"), url("../fonts/" + $name + ".woff") format("woff"), url("../fonts/" + $name + ".woff2") format("woff2"), url("../fonts/" + $name + ".ttf") format("truetype")
		font-weight: normal
		font-style: normal
	
// background cover
=cover
	background-size: cover
	background: no-repeat 50% 50%

// placeholder
=placeholder
	&:-moz-placeholder,
	&::-moz-placeholder
		opacity: 1
		@content
	&::-webkit-input-placeholder
		@content

// unselectable
=unselectable
	-webkit-touch-callout: none
	-webkit-user-select: none
	-khtml-user-select: none
	-moz-user-select: none
	-ms-user-select: none
	user-select: none

=nosel
	+unselectable

// selection
=selection
	& ::selection
		@content
	& ::-moz-selection
		@content

//triangle
=arr($width, $height, $bg, $direction)
	width: 0px
	height: 0px
	border-style: solid
	@if $direction == t
		border-width: 0 $width / 2 + px $height + px $width / 2 + px
		border-color: transparent transparent $bg transparent
	@if $direction == r
		border-width: $height / 2 + px 0 $height / 2 + px $width + px
		border-color: transparent transparent transparent $bg
	@if $direction == b
		border-width: $height + px $width / 2 + px 0 $width / 2 + px
		border-color: $bg transparent transparent transparent
	@if $direction == l
		border-width: $height / 2 + px $width + px $height / 2 + px 0
		border-color: transparent $bg transparent transparent
	@if $direction == tl
		border-width: $height + px $width + px 0 0
		border-color: $bg transparent transparent transparent
	@if $direction == tr
		border-width: 0 $width + px $height + px 0
		border-color: transparent $bg transparent transparent
	@if $direction == br
		border-width: 0 0 $height + px $width + px
		border-color: transparent transparent $bg transparent
	@if $direction == bl
		border-width: $width + px 0 0 $height + px
		border-color: transparent transparent transparent $bg
// example
// +arr(500,50, #000, l)
// +arr(500,50, #000, bl)

=vcenter
	position: absolute
	top: 50%
	left: 50%
	transform: translate(-50%,-50%)

=vertical
	font-size: 0
	text-align: center
	&:before
		content: ""
		display: inline-block
		vertical-align: middle
		width: 0
		height: 100%

=hide-text
	font: 0/0 a
	text-shadow: none
	color: transparent

=text-overflow
	overflow: hidden
	-ms-text-overflow: ellipsis
	text-overflow: ellipsis
	white-space: nowrap

=ratio($width, $height)
	position: relative
	&:before
		display: block
		content: ""
		width: 100%
		padding-top: ($height / $width) * 100%

=ratio-in
	position: absolute
	top: 0
	left: 0
	right: 0
	bottom: 0
	